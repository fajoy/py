#!/usr/bin/env python
#ref https://github.com/boto/boto/blob/develop/docs/source/s3_tut.rst
import boto
from boto.s3.connection import S3Connection
from boto.s3.key import Key
import getopt, sys

def usage():
    print """useage: s3get -b <bucket> -k <key> [ -f <file> ]"""

#ref https://github.com/boto/boto/blob/develop/boto/s3/key.py#L1581
def s3get_to_stdout(s3,bucket,key):
    b = s3.get_bucket(bucket) 
    k=b.get_key(key)
    if isinstance(k,Key):
        sys.stdout.write(k.get_contents_as_string())
    else:
        print "No such key %s" % key

#ref https://github.com/boto/boto/blob/develop/boto/s3/key.py#L1515
def s3get_to_filename(s3,bucket,key,filename):
    b = s3.get_bucket(bucket) 
    k=b.get_key(key)
    if isinstance(k,Key):
        k.get_contents_to_filename(filename)
    else:
        print "No such key %s" % key

if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], "b:k:f:",['bucket=','key=','file='] )
    except getopt.GetoptError as err:
        usage()
        sys.exit(2)

    bucket=None
    key=None
    value=None
    filename=None
    for o, a in opts:
        if o in ("-b", "--bucekt"):
            bucket = a
        elif o in ("-k", "--key"):
            key = a
        elif o in ("-f", "--file"):
            filename = a
        else:
            print "error option : [%s]" ,o
            usage()
            sys.exit(2)
    
    s3=boto.connect_s3()
    if filename:
        s3get_to_filename(s3,bucket,key,filename)
    else:
        s3get_to_stdout(s3,bucket,key)
